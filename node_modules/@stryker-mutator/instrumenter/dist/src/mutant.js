"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Mutant = void 0;
const tslib_1 = require("tslib");
const generator_1 = tslib_1.__importDefault(require("@babel/generator"));
class Mutant {
    constructor(id, fileName, specs, positionOffset = 0, lineOffset = 0) {
        this.id = id;
        this.fileName = fileName;
        this.positionOffset = positionOffset;
        this.lineOffset = lineOffset;
        this.original = specs.original;
        this.replacement = specs.replacement;
        this.mutatorName = specs.mutatorName;
        this.ignoreReason = specs.ignoreReason;
        this.replacementCode = generator_1.default(this.replacement).code;
    }
    toApiMutant() {
        return {
            fileName: this.fileName,
            id: this.id,
            location: toApiLocation(this.original.loc, this.lineOffset),
            mutatorName: this.mutatorName,
            range: [this.original.start + this.positionOffset, this.original.end + this.positionOffset],
            replacement: this.replacementCode,
            ignoreReason: this.ignoreReason,
        };
    }
}
exports.Mutant = Mutant;
function toApiLocation(source, lineOffset) {
    return {
        start: toPosition(source.start, lineOffset),
        end: toPosition(source.end, lineOffset),
    };
}
function toPosition(source, lineOffset) {
    return {
        column: source.column,
        line: source.line + lineOffset - 1, // Stryker works 0-based internally
    };
}
//# sourceMappingURL=mutant.js.map