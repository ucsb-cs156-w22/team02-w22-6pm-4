"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnaryOperatorMutator = void 0;
const tslib_1 = require("tslib");
const types = tslib_1.__importStar(require("@babel/types"));
var UnaryOperator;
(function (UnaryOperator) {
    UnaryOperator["+"] = "-";
    UnaryOperator["-"] = "+";
    UnaryOperator["~"] = "";
})(UnaryOperator || (UnaryOperator = {}));
class UnaryOperatorMutator {
    constructor() {
        this.name = 'UnaryOperator';
    }
    mutate(path) {
        if (path.isUnaryExpression() && this.isSupported(path.node.operator) && path.node.prefix) {
            const mutatedOperator = UnaryOperator[path.node.operator];
            const replacement = mutatedOperator.length
                ? types.unaryExpression(mutatedOperator, path.node.argument)
                : types.cloneNode(path.node.argument, false);
            return [
                {
                    original: path.node,
                    replacement,
                },
            ];
        }
        return [];
    }
    isSupported(operator) {
        return Object.keys(UnaryOperator).includes(operator);
    }
}
exports.UnaryOperatorMutator = UnaryOperatorMutator;
//# sourceMappingURL=unary-operator-mutator.js.map